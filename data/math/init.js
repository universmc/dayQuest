const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

const borderChars = {
    topLeft: '‚ïî',
    topRight: '‚ïó',
    bottomLeft: '‚ïö',
    bottomRight: '‚ïù',
    horizontal: '‚ïê',
    vertical: '‚ïë',
    intersectionLeft: '‚ï†',
    intersectionRight: '‚ï£',
    intersectionTop: '‚ï¶',
    intersectionBottom: '‚ï©',
    intersectionCross: '‚ï¨',
  };

async function main() {

  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  //  const BorderChars = "inistlisation du template de response avec insterface graphique ASCII datase `BorderChars`";
  
  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "system",name:"[üìî.codex]", content:"phase[01]:[RUN]:[brainstorming(session.timestamp)traduction{lang:Fr=Fran√ßais}!]"},
      { "role": "system", "content": "Initiation au projet 'D√©veloppement du site ia.univers-mc.cloud'." },
      { "role": "assistant", "content": "Bienvenue dans la phase de brainstorming. Nous allons discuter des exigences et des objectifs du projet." },
      { "role": "user", "content": "Quelles technologies allons-nous utiliser pour ce projet ?" },
      { "role": "assistant", "content": "Nous utiliserons le langage GROQ pour interroger et manipuler nos donn√©es, en compl√©ment des technologies web standards pour le d√©veloppement du site." },
      { "role": "user", "content": "Parfait, comment d√©butons-nous la configuration ?" },
      { "role": "assistant", "content": "Commen√ßons par d√©finir notre structure de donn√©es et les requ√™tes GROQ n√©cessaires pour afficher le contenu dynamiquement sur le site." }
      

    ],
    model: "mixtral-8x7b-32768",
    temperature: 0.8,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "data/train/mdMessages_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();