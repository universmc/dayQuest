const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

const borderChars = {
    topLeft: '‚ïî',
    topRight: '‚ïó',
    bottomLeft: '‚ïö',
    bottomRight: '‚ïù', 
    horizontal: '‚ïê',
    vertical: '‚ïë',
    intersectionLeft: '‚ï†',
    intersectionRight: '‚ï£',
    intersectionTop: '‚ï¶',
    intersectionBottom: '‚ï©',
    intersectionCross: '‚ï¨',
  };


    

async function main() {

  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences,pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const BorderChars = 'borderChars';
  
  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "system",name:"system", content:"initiation Machine Learning `[üåå.systemDream]{https://github.com/universmc/systemDream}`.timestamp "},
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[FramWork(session.timestamp_unix [DATE])]"},
      {role: "assistant",name:"[üìî.codex]", content:BorderChars},
      {role: "user",name:"[üë®üèΩ‚Äçüíª.Mike]:", content:"groq:`borderChars` wirefram interface ascii groq output $message build/.*responses"},

    ],
    model: "mixtral-8x7b-32768",
    temperature: 0.7,
    max_tokens: 512,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const gqlContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "build/mdMessages_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".gql";
    fs.writeFileSync(outputFilePath, gqlContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();